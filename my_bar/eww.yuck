
;;Main Definition


(defwidget batterystuff []
	(box :orientation "h"
		 :space-evenly false
         :halign "end"
		 :class "right_modules"
(bat_label)
(battery_metric)
))




(defwidget right []
	(box :orientation "h"
		 :space-evenly false
         :halign "end"
		 :class "right_modules"
(audiostuff)
(sidestuff)
(batterystuff)
time
))



(defwidget bar []
  (centerbox :orientation "h"
    (left)
    (music)
    (right)))


(defwidget audiostuff []
  (box :class "audiostuff" :orientation "h" :space-evenly false :halign "end"

    (metric :label "Audio "
            :value volume
            :onchange "amixer -D pulse sset Master {}%")
    ))


(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"

    (metric :label "Ram "
            :value {EWW_RAM.used_mem_perc}
            :onchange "")

    (metric :label "Cpu "
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")

    ))



(defwidget bat_label []
  (box :class "bat_label"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {bat_label != "" ? "${bat_label} " : ""}))

(defpoll bat_label :interval "1s"
  "scripts/getbat_status")


(defwidget battery_metric []
  (box :class "battery_metric" :orientation "h" :space-evenly false :halign "end"
    (metric :label ""
            :value battery
            :onchange "cat /sys/class/power_supply/BAT0/capacity")
    ))


(defwidget battery_status []
  (box :class "battery_metric" :orientation "h" :space-evenly false :halign "end"
    (metric :label ""
            :value "cat /sys/class/power_supply/BAT0/status"
            :onchange "scripts/showbat")
    ))


(deflisten workspace "scripts/workspace")
(defwidget workspaces []
(literal :content workspace))




(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "${music}" : ""}))


(defwidget battery []
  (box :class "battery"
       :orientation "h"
       :space-evenly false
       :halign "left"
    {battery != "" ? " ÔâÅ  ${battery}%" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))


(defwidget left []
	(box :orientation "h" 
		 :space-evenly false  
         :halign "start"
		 :class "left_modules"
(workspaces)
))


(defpoll music :interval "1s"
  "scripts/getmusic")

(defpoll battery :interval "10s"
  "scripts/getbat")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M '")

(defwindow bar
  :exclusive true
  :monitor 0
  :windowtype "dock"
  :stacking "bg"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "28px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
